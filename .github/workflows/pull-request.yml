name: Pull Request Checks

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

# Uprawnienia potrzebne do komentowania PR
permissions:
  contents: read
  pull-requests: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm ci
      - name: Run linting
        run: pnpm lint

  unit-tests:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm ci
      - name: Run unit tests with coverage
        run: pnpm test:coverage
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 14

  e2e-tests:
    name: E2E Tests
    needs: lint
    runs-on: ubuntu-latest
    environment: integration
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      VITE_OPENROUTER_API_KEY: ${{ secrets.VITE_OPENROUTER_API_KEY }}
      TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
      TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      TEST_USER_TOKEN: ${{ secrets.TEST_USER_TOKEN }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm ci
      # Instalacja przeglądarek na podstawie playwright.config.ts
      - name: Install Playwright browsers
        run: pnpm exec playwright install chromium
      - name: Run E2E tests
        run: pnpm test:e2e
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 14
      - name: Upload test coverage
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-coverage
          path: coverage-e2e/
          retention-days: 14

  status-comment:
    name: Update PR Status
    if: ${{ always() }}
    needs: [unit-tests, e2e-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Create Status Comment
        uses: actions/github-script@v7
        with:
          script: |
            const unitTests = '${{ needs.unit-tests.result }}'
            const e2eTests = '${{ needs.e2e-tests.result }}'

            let status = '✅ Wszystkie testy przeszły pomyślnie!'
            if (unitTests !== 'success' || e2eTests !== 'success') {
              status = '❌ Niektóre testy nie przeszły:\n'
              if (unitTests !== 'success') status += '- Testy jednostkowe: failed\n'
              if (e2eTests !== 'success') status += '- Testy E2E: failed\n'
            }

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: status
            })
